<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jnshu.carrots.backstageservice.dao.RolePermMapper" >
  <resultMap id="BaseResultMap" type="com.jnshu.carrots.backstageservice.model.RolePerm" >
    <id column="rp_id" property="rpId" jdbcType="BIGINT" />
    <result column="role_id" property="roleId" jdbcType="BIGINT" />
    <result column="perm_id" property="permId" jdbcType="BIGINT" />
    <result column="create_name" property="createName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="update_name" property="updateName" jdbcType="VARCHAR" />
    <result column="update_at" property="updateAt" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    rp_id, role_id, perm_id, create_name, create_time, update_name, update_at
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from role_perm
    where rp_id = #{rpId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from role_perm
    where rp_id = #{rpId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jnshu.carrots.backstageservice.model.RolePerm" >
    insert into role_perm (rp_id, role_id, perm_id, 
      create_name, create_time, update_name, 
      update_at)
    values (#{rpId,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{permId,jdbcType=BIGINT}, 
      #{createName,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, #{updateName,jdbcType=VARCHAR}, 
      #{updateAt,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.jnshu.carrots.backstageservice.model.RolePerm" >
    insert into role_perm
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rpId != null" >
        rp_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="permId != null" >
        perm_id,
      </if>
      <if test="createName != null" >
        create_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateName != null" >
        update_name,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rpId != null" >
        #{rpId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="permId != null" >
        #{permId,jdbcType=BIGINT},
      </if>
      <if test="createName != null" >
        #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateName != null" >
        #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jnshu.carrots.backstageservice.model.RolePerm" >
    update role_perm
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="permId != null" >
        perm_id = #{permId,jdbcType=BIGINT},
      </if>
      <if test="createName != null" >
        create_name = #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateName != null" >
        update_name = #{updateName,jdbcType=VARCHAR},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=BIGINT},
      </if>
    </set>
    where rp_id = #{rpId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jnshu.carrots.backstageservice.model.RolePerm" >
    update role_perm
    set role_id = #{roleId,jdbcType=BIGINT},
      perm_id = #{permId,jdbcType=BIGINT},
      create_name = #{createName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_name = #{updateName,jdbcType=VARCHAR},
      update_at = #{updateAt,jdbcType=BIGINT}
    where rp_id = #{rpId,jdbcType=BIGINT}
  </update>
</mapper>